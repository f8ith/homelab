########################### NETWORKS
# You may customize the network subnet (192.168.89.0/24) below as you please.
# Docker Compose version 3.5 or higher required to define networks this way.

networks:
  nginx-proxy:
    name: nginx-proxy
    driver: bridge
    ipam:
      config:
        - subnet: 11.0.0.0/16

########################### EXTENSION FIELDS
# Helps eliminate repetition of sections
# More Info on how to use this: https://github.com/htpcBeginner/docker-traefik/pull/228

# Common environment values
x-environment: &default-tz-puid-pgid
  TZ: $TZ
  PUID: $PUID
  PGID: $PGID

# Keys common to some of the core services that we always to automatically restart on failure
x-common-keys-core: &common-keys-core
  networks:
    - nginx-proxy
  security_opt:
    - no-new-privileges:true
  restart: always
  env_file:
    - .env

# Keys common to some of the dependent services/apps
x-common-keys-apps: &common-keys-apps
  networks:
    - nginx-proxy
  security_opt:
    - no-new-privileges:true
  restart: unless-stopped
  env_file:
    - .env

services:
  caddy:
    image: lucaslorentz/caddy-docker-proxy:ci-alpine
    container_name: caddy
    ports:
      - 80:80
      - 443:443
    networks:
      - nginx-proxy
    environment:
      - CADDY_INGRESS_NETWORKS=nginx-proxy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./appdata/caddy:/data
    restart: unless-stopped
    labels:
      caddy.email: jamienibtong@gmail.com
      caddy.auto_https: "ignore_loaded_certs"
    deploy:
      placement:
        constraints:
          - node.role == manager
      replicas: 1
      restart_policy:
        condition: any
      resources:
        reservations:
          cpus: "0.1"
          memory: 200M

            #mailserver:
            #  image: ghcr.io/docker-mailserver/docker-mailserver:latest
            #  container_name: mailserver
            #  hostname: mail.jamietong.com
            #  env_file: mailserver.env
            #  # More information about the mail-server ports:
            #  # https://docker-mailserver.github.io/docker-mailserver/latest/config/security/understanding-the-ports/
            #  networks:
            #    - mailserver-proxy
            #  ports:
            #    - "25:25"    # SMTP  (explicit TLS => STARTTLS, Authentication is DISABLED => use port 465/587 instead)
            #    - "143:143"  # IMAP4 (explicit TLS => STARTTLS)
            #    - "465:465"  # ESMTP (implicit TLS)
            #    - "587:587"  # ESMTP (explicit TLS => STARTTLS)
            #    - "993:993"  # IMAP4 (implicit TLS)
            #  volumes:
            #    - ./appdata/dms/mail-data/:/var/mail/
            #    - ./appdata/dms/mail-state/:/var/mail-state/
            #    - ./appdata/dms/mail-logs/:/var/log/mail/
            #    - ./appdata/dms/config/:/tmp/docker-mailserver/
            #    - ./appdata/certbot/certs/:/etc/letsencrypt
            #    - ./appdata/caddy/caddy/certificates/acme-v02.api.letsencrypt.org-directory/mail.jamietong.com/mail.jamietong.com.crt:/etc/letsencrypt/live/mail.jamietong.com/fullchain.pem
            #    - ./appdata/caddy/caddy/certificates/acme-v02.api.letsencrypt.org-directory/mail.jamietong.com/mail.jamietong.com.key:/etc/letsencrypt/live/mail.jamietong.com/privkey.pem
            #    - /etc/localtime:/etc/localtime:ro
            #  restart: always
            #  stop_grace_period: 1m
            #  # Uncomment if using `ENABLE_FAIL2BAN=1`:
            #  # cap_add:
            #  #   - NET_ADMIN
            #  healthcheck:
            #    test: "ss --listening --tcp | grep -P 'LISTEN.+:smtp' || exit 1"
            #    timeout: 3s
            #    retries: 0
            #  labels:
            #    # Set your DMS FQDN here to add the site-address into the generated Caddyfile:
            #    caddy: mail.jamietong.com
            #    # Add a dummy directive is required:
            #    caddy.respond: "Hello DMS"

            #immich-server:
            #  <<: *common-keys-apps 
            #  container_name: immich_server
            #  image: ghcr.io/immich-app/immich-server:${IMMICH_VERSION:-release}
            #  # extends:
            #  #   file: hwaccel.transcoding.yml
            #  #   service: cpu # set to one of [nvenc, quicksync, rkmpp, vaapi, vaapi-wsl] for accelerated transcoding
            #  volumes:
            #    - ${UPLOAD_LOCATION}:/usr/src/app/upload
            #    - /etc/localtime:/etc/localtime:ro
            #  env_file:
            #    - .env
            #  depends_on:
            #    - redis
            #    - database
            #  restart: always
            #  labels:
            #    caddy_1: immich.jamietong.com
            #    caddy_1.reverse_proxy: "{{upstreams 2283}}"
            #    caddy_1.tls: "/data/caddy/certificates/jamietong.com-certificate.pem /data/caddy/certificates/jamietong.com-key.pem"

            #immich-machine-learning:
            #  <<: *common-keys-apps 
            #  container_name: immich_machine_learning
            #  # For hardware acceleration, add one of -[armnn, cuda, openvino] to the image tag.
            #  # Example tag: ${IMMICH_VERSION:-release}-cuda
            #  image: ghcr.io/immich-app/immich-machine-learning:${IMMICH_VERSION:-release}
            #  # extends: # uncomment this section for hardware acceleration - see https://immich.app/docs/features/ml-hardware-acceleration
            #  #   file: hwaccel.ml.yml
            #  #   service: cpu # set to one of [armnn, cuda, openvino, openvino-wsl] for accelerated inference - use the `-wsl` version for WSL2 where applicable
            #  volumes:
            #    - model-cache:/cache
            #  env_file:
            #    - .env
            #  restart: always

            #redis:
            #  <<: *common-keys-apps 
            #  container_name: immich_redis
            #  image: docker.io/redis:6.2-alpine@sha256:328fe6a5822256d065debb36617a8169dbfbd77b797c525288e465f56c1d392b
            #  healthcheck:
            #    test: redis-cli ping || exit 1
            #  restart: always

            #database:
            #  <<: *common-keys-apps 
            #  container_name: immich_postgres
            #  image: docker.io/tensorchord/pgvecto-rs:pg14-v0.2.0@sha256:90724186f0a3517cf6914295b5ab410db9ce23190a2d9d0b9dd6463e3fa298f0
            #  environment:
            #    POSTGRES_PASSWORD: ${DB_PASSWORD}
            #    POSTGRES_USER: ${DB_USERNAME}
            #    POSTGRES_DB: ${DB_DATABASE_NAME}
            #    POSTGRES_INITDB_ARGS: '--data-checksums'
            #  volumes:
            #    - ${DATADIR}/immich_postgres/data:/var/lib/postgresql/data
            #  healthcheck:
            #    test: pg_isready --dbname='${DB_DATABASE_NAME}' --username='${DB_USERNAME}' || exit 1; Chksum="$$(psql --dbname='${DB_DATABASE_NAME}' --username='${DB_USERNAME}' --tuples-only --no-align --command='SELECT COALESCE(SUM(checksum_failures), 0) FROM pg_stat_database')"; echo "checksum failure count is $$Chksum"; [ "$$Chksum" = '0' ] || exit 1
            #    interval: 5m
            #    start_interval: 30s
            #    start_period: 5m
            #  command: ["postgres", "-c" ,"shared_preload_libraries=vectors.so", "-c", 'search_path="$$user", public, vectors', "-c", "logging_collector=on", "-c", "max_wal_size=2GB", "-c", "shared_buffers=512MB", "-c", "wal_compression=on"]
            #  restart: always

include:
   - compose/beta/nginx-proxy.yml
   - compose/beta/syncyomi.yml
